- name: Create our groups
  ansible.builtin.group:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ atgm_groups }}"

- name: Create our users
  user:
    name: "{{ item.name }}"
    home: "/home/{{ item.name }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    groups: "{{ item.groups | default(omit) }}"
    update_password: on_create
    password: "{{ avans_default_password | password_hash('sha512') }}"
    append: yes
  loop: "{{ atgm_users }}"

- name: Create our projects
  user:
    name: "{{ item.name }}"
    home: "{{ project_directory }}/{{ item.year }}/{{ item.name }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    groups: "{{ item.groups | default(omit) }}"
    update_password: on_create
    password: "{{ avans_default_password | password_hash('sha512') }}"
    append: yes
  loop: "{{ atgm_projects }}"
  when: item.host == inventory_hostname

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ project_directory }}/{{ item.year }}/{{ item.name }}/data_storage"
    state: directory
    mode: '0755'
    owner: "{{ item.name }}"
    
  loop: "{{ atgm_projects }}"
  when: item.host == inventory_hostname


- name: Update the apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install basic packages we want everywhere
  package:
    name:
      - acl
      - at
      - atop
      - bc
      - build-essential
      - byobu
      - curl
      - emacs-nox
      - git
      - htop
      - iftop
      - iotop
      - jq
      - lsof
      - make
      - moreutils
      - nano
      - patch
      - screen
      - strace
      - sudo
      - telnet
      - tmux
      - tree
      - vim-nox
      - virtualenv
      - wget
      - zlib1g-dev
      - sshfs

- name: Select sane default for students
  community.general.alternatives:
    name: editor
    path: /bin/nano

- name: Ensure services are enabled + started
  systemd:
    name: "{{ item }}"
    enabled: yes
    #state: started
  with_items:
    - atop
    - atd

- name: Create the mount directory
  file:
    path: /mount
    state: directory
    mode: 0755
  when: "'galaxy.bioinformatics-atgm.nl' in inventory_hostname"

- name: Mount sda, sdb
  ansible.posix.mount:
    path: "/mount/{{ item }}"
    src: "/dev/{{ item }}"
    fstype: ext4
    state: mounted
  with_items:
    - sda
    - sdb
  when: "'galaxy.bioinformatics-atgm.nl' in inventory_hostname"
