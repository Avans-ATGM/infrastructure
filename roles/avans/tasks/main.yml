#########################################################
# General creation of user accounts and user directories#
#########################################################
- name: Create our groups
  ansible.builtin.group:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ atgm_groups }}"

- name: Create our users
  user:
    name: "{{ item.name }}"
    home: "/home/{{ item.name }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    groups: "{{ item.groups | default(omit) }}"
    update_password: on_create
    password: "{{ avans_default_password | password_hash('sha512') }}"
    append: yes
  loop: "{{ atgm_users }}"

- name: Create our projects
  user:
    name: "{{ item.name }}"
    home: "{{ project_directory }}/{{ item.year }}/{{ item.name }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    groups: "{{ item.groups | default(omit) }}"
    update_password: on_create
    password: "{{ avans_default_password | password_hash('sha512') }}"
    append: yes
  loop: "{{ atgm_projects }}"
  when: item.host == inventory_hostname

- name: Create data storage to bebacked up with every project
  ansible.builtin.file:
    path: "{{ project_directory }}/{{ item.year }}/{{ item.name }}/data_storage"
    state: directory
    mode: '0755'
    owner: "{{ item.name }}"
  loop: "{{ atgm_projects }}"
  when: item.host == inventory_hostname

- name: Create miniconda enviorment for new users
  include_role:
    name: galaxyproject.miniconda
  vars:
    miniconda_prefix: "{{ project_directory }}/{{ item.year }}/{{ item.name }}/conda"
  loop: "{{ atgm_projects }}"
  when: item.host == inventory_hostname


- name: create standard readme file
  copy:
    dest: "{{ project_directory }}/{{ item.year }}/{{ item.name }}/Readme"
    force: no
    group: sys
    owner: telegraf
    mode: '0755'
    content: |
      Dear students, welcome to your project directory.
      Use it as you see fit but here are a few things you should know:
      - Put in the data_storage are files which are essentional to yourbackup.
        May something go terrible wrong and all your data is deleted we can retrieve a backup.
        We will make an automated backup weekly (saturday) to an other machine of all files in the data_storage directory

      - We will monitor howmuch storage space you are using. Try not to go over the 200 GB if it is not nessacery.

      Further try also to make your own Read me files or add to this file with your favourite text editor.
      For example explain what is in every directory and what the input, output are of your scripts / commands so we can recreate everything if needed from the backups

      And remember have fun, if you have any questions please contact Donny or Bazante.
      Small tip to do.

      Change your password from the complicated autogenerated to something you like:
      ``` passwd [your_username] ``` and then follow instructions on terminal
  loop: "{{ atgm_projects }}"
  when: item.host == inventory_hostname

- name: Select sensible default for students
  community.general.alternatives:
    name: editor
    path: /bin/nano


###################################
# updates and installing software #
###################################

- name: Update the apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install basic packages we want everywhere
  package:
    name:
      - acl
      - at
      - atop
      - bc
      - build-essential
      - byobu
      - curl
      - emacs-nox
      - git
      - htop
      - iftop
      - iotop
      - jq
      - lsof
      - make
      - moreutils
      - nano
      - patch
      - screen
      - strace
      - sudo
      - telnet
      - tmux
      - tree
      - vim-nox
      - virtualenv
      - wget
      - zlib1g-dev
      - sshfs
      - borgbackup




- name: Ensure services are enabled + started
  systemd:
    name: "{{ item }}"
    enabled: yes
    #state: started
  with_items:
    - atop
    - atd

############################
# create storage directory #
############################
- name: Create the mount directory
  file:
    path: /mount
    state: directory
    mode: 0755
  when: "'galaxy.bioinformatics-atgm.nl' in inventory_hostname"

- name: Mount sda, sdb
  ansible.posix.mount:
    path: "/mount/{{ item }}"
    src: "/dev/{{ item }}"
    fstype: ext4
    state: mounted
  with_items:
    - sda
    - sdb
  when: "'galaxy.bioinformatics-atgm.nl' in inventory_hostname"


#add bacup.yml tasks


- name: Include student project backup tasks
  include_tasks:
    file: backup.yml
    apply:
      tags: initialise / update backup system
  tags:
    - when there are student projects